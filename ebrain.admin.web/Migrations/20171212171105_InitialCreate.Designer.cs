// <auto-generated />
using ebrain.admin.bc;
using ebrain.admin.bc.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ebrain.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171212171105_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ebrain.admin.bc.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Configuration");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("JobTitle");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Branch", b =>
                {
                    b.Property<Guid>("BranchId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<string>("BranchCode")
                        .HasMaxLength(256);

                    b.Property<string>("BranchName")
                        .HasMaxLength(256);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<string>("FAX")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsHQ");

                    b.Property<string>("Note");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50);

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("BranchId");

                    b.ToTable("Branchs");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.BranchHead", b =>
                {
                    b.Property<Guid>("BranchHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid?>("BranchParentId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("BranchHeadId");

                    b.ToTable("BranchHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Class", b =>
                {
                    b.Property<Guid>("ClassId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<string>("ClassCode")
                        .HasMaxLength(256);

                    b.Property<string>("ClassName")
                        .HasMaxLength(256);

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ClassId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.ClassHead", b =>
                {
                    b.Property<Guid>("ClassHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid?>("ClassId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ClassHeadId");

                    b.ToTable("ClassHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Consultant", b =>
                {
                    b.Property<Guid>("ConsultantId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<string>("ConsultantCode");

                    b.Property<string>("ConsultantName");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ConsultantId");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<int>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("AppCustomers");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Document", b =>
                {
                    b.Property<Guid>("DocumentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DocumentCode");

                    b.Property<string>("DocumentName");

                    b.Property<Guid?>("GroupDocumentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("Path");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("DocumentId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.DocumentHead", b =>
                {
                    b.Property<Guid>("DocumentHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("DocumentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("DocumentHeadId");

                    b.ToTable("DocumentHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.GroupDocument", b =>
                {
                    b.Property<Guid>("GroupDocumentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("GroupDocumentCode");

                    b.Property<string>("GroupDocumentName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("GroupDocumentId");

                    b.ToTable("GroupDocuments");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.GroupDocumentHead", b =>
                {
                    b.Property<Guid>("GroupDocumentHeadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GrpDocumentHeadId");

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("GroupDocumentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("GroupDocumentHeadId");

                    b.ToTable("GroupDocumentHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.GrpMaterial", b =>
                {
                    b.Property<Guid>("GrpMaterialId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("GrpMaterialCode");

                    b.Property<string>("GrpMaterialName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("GrpMaterialId");

                    b.ToTable("GrpMaterials");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Inventory", b =>
                {
                    b.Property<Guid>("InventoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.InventoryDetail", b =>
                {
                    b.Property<Guid>("InventoryDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal?>("InputQuantity");

                    b.Property<Guid?>("InventoryId");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid?>("Materialid");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("InventoryDetailId");

                    b.ToTable("InventoryDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.IOStock", b =>
                {
                    b.Property<Guid>("IOStockId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid?>("BranchParentId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("IONumber");

                    b.Property<Guid?>("IOTypeId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("PurchaseOrderCode");

                    b.Property<Guid?>("PurchaseOrderId");

                    b.Property<Guid?>("SupplierId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("IOStockId");

                    b.ToTable("IOStocks");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.IOStockDetail", b =>
                {
                    b.Property<Guid>("IOStockDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid?>("IOStockId");

                    b.Property<decimal>("InputQuantity");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MaterialCode");

                    b.Property<Guid?>("MaterialId");

                    b.Property<string>("MaterialName");

                    b.Property<string>("Note");

                    b.Property<decimal?>("PriceAfterVAT");

                    b.Property<decimal?>("PriceBeforeVAT");

                    b.Property<Guid?>("PurchaseOrderDetailId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<decimal?>("TotalPrice");

                    b.Property<decimal?>("TotalPriceBeforeVAT");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int?>("VAT");

                    b.HasKey("IOStockDetailId");

                    b.ToTable("IOStockDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.IOType", b =>
                {
                    b.Property<Guid>("IOTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("IOTypeCode");

                    b.Property<string>("IOTypeName");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInput");

                    b.Property<bool>("JoinAverages");

                    b.Property<bool>("JoinStockMovementSummary");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("IOTypeId");

                    b.ToTable("IOTypes");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.LevelClass", b =>
                {
                    b.Property<Guid>("LevelClassId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LevelClassCode");

                    b.Property<string>("LevelClassName");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("LevelClassId");

                    b.ToTable("LevelClass");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.LevelClassHead", b =>
                {
                    b.Property<Guid>("LevelClassHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid?>("LevelClassId");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("LevelClassHeadId");

                    b.ToTable("LevelClassHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Material", b =>
                {
                    b.Property<Guid>("MaterialId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<Guid>("GrpMaterialId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MaterialCode");

                    b.Property<string>("MaterialName");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UnitId");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.MaterialHead", b =>
                {
                    b.Property<Guid>("MaterialHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid?>("MaterialId");

                    b.Property<string>("Note");

                    b.Property<decimal?>("Price");

                    b.Property<decimal?>("PriceAfterVAT");

                    b.Property<decimal?>("SellPrice");

                    b.Property<decimal?>("SellPriceAfterVAT");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int?>("VAT");

                    b.Property<decimal?>("WholePrice");

                    b.Property<decimal?>("WholePriceAfterVAT");

                    b.HasKey("MaterialHeadId");

                    b.ToTable("MaterialHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CashierId");

                    b.Property<string>("Comments")
                        .HasMaxLength(500);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("Discount");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.HasIndex("CustomerId");

                    b.ToTable("AppOrders");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Discount");

                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("AppOrderDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("PaymentCode");

                    b.Property<string>("PaymentName");

                    b.Property<Guid?>("PaymentTypeId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<decimal?>("TotalMoney");

                    b.Property<decimal?>("TotalMoneyAgain");

                    b.Property<decimal?>("TotalMoneyReturn");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PaymentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PaymentDetail", b =>
                {
                    b.Property<Guid>("PaymentDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("IONumber");

                    b.Property<Guid>("IOStockId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<Guid?>("PaymentId");

                    b.Property<decimal?>("PriceAfterVAT");

                    b.Property<decimal?>("PriceBeforeVAT");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<decimal?>("TotalPrice");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<int?>("VAT");

                    b.HasKey("PaymentDetailId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PaymentType", b =>
                {
                    b.Property<Guid>("PaymentTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("PaymentTypeCode");

                    b.Property<string>("PaymentTypeName");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PaymentTypeId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PaymentTypeHead", b =>
                {
                    b.Property<Guid>("PaymentTypeHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<Guid?>("PaymentTypeId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PaymentTypeHeadId");

                    b.ToTable("PaymentTypeHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BuyingPrice");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Icon")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDiscontinued");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId");

                    b.Property<int>("ProductCategoryId");

                    b.Property<decimal>("SellingPrice");

                    b.Property<int>("UnitsInStock");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("AppProducts");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("AppProductCategories");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Promotion", b =>
                {
                    b.Property<Guid>("PromotionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("EndDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("PromotionCode");

                    b.Property<string>("PromotionName");

                    b.Property<DateTime?>("StartDate");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PromotionId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PromotionDetail", b =>
                {
                    b.Property<Guid>("PromotionDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal?>("DiscountMoney");

                    b.Property<int?>("DiscountPercent");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MaterialCode");

                    b.Property<Guid?>("MaterialId");

                    b.Property<string>("MaterialName");

                    b.Property<string>("Note");

                    b.Property<Guid?>("PromotionId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PromotionDetailId");

                    b.ToTable("PromotionDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("PurchaseOrderCode");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PurchaseOrderId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<Guid>("PurchaseOrderDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("InputQuantity");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("MaterialCode");

                    b.Property<string>("MaterialId");

                    b.Property<string>("MaterialName");

                    b.Property<string>("Note");

                    b.Property<Guid>("PurchaseOrderId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("PurchaseOrderDetailId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Relationship", b =>
                {
                    b.Property<Guid>("RelationshipId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("RelationshipCode");

                    b.Property<string>("RelationshipName");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("RelationshipId");

                    b.ToTable("Relationships");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Room", b =>
                {
                    b.Property<Guid>("RoomId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("RoomCode");

                    b.Property<string>("RoomName");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("RoomId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.RoomHead", b =>
                {
                    b.Property<Guid>("RoomHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<Guid?>("RoomId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("RoomHeadId");

                    b.ToTable("RoomHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.ShiftClass", b =>
                {
                    b.Property<Guid>("ShiftClassId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("ShiftClassCode");

                    b.Property<string>("ShiftClassName");

                    b.Property<DateTime?>("StartTime");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ShiftClassId");

                    b.ToTable("ShiftClass");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.ShiftClassHead", b =>
                {
                    b.Property<Guid>("ShiftClassHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<Guid?>("ShiftClassId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ShiftClassHeadId");

                    b.ToTable("ShiftClassHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Stock", b =>
                {
                    b.Property<Guid>("StockId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("StockCode");

                    b.Property<string>("StockName");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("StockId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.StockHead", b =>
                {
                    b.Property<Guid>("StockHeadId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<Guid?>("StockId");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("StockHeadId");

                    b.ToTable("StockHeads");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountBank");

                    b.Property<string>("Address");

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<string>("ClassName");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool?>("Male");

                    b.Property<string>("Note");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<string>("SchoolName");

                    b.Property<string>("StudentCode");

                    b.Property<string>("StudentName");

                    b.Property<string>("TaxCode");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<string>("UserName");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.StudentRelationShip", b =>
                {
                    b.Property<Guid>("StudentRelationShipId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountBank");

                    b.Property<string>("Address");

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Facebook");

                    b.Property<string>("Fax");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("Phone");

                    b.Property<string>("RelationRequire");

                    b.Property<Guid?>("RelationShipId");

                    b.Property<Guid?>("StudentId");

                    b.Property<string>("TaxCode");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("StudentRelationShipId");

                    b.ToTable("StudentRelationShips");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Supplier", b =>
                {
                    b.Property<Guid>("SupplierId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountBank");

                    b.Property<string>("Address");

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email");

                    b.Property<string>("Fax");

                    b.Property<Guid?>("GrpSupplierId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<string>("Phone");

                    b.Property<string>("SupplierCode");

                    b.Property<string>("SupplierName");

                    b.Property<string>("TaxCode");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Unit", b =>
                {
                    b.Property<Guid>("UnitId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AutoLogOnCode_LastUpdate_ComputerName");

                    b.Property<string>("AutoLogOnCode_LastUpdate_IP");

                    b.Property<string>("AutoLogOnCode_LastUpdate_MACAddress");

                    b.Property<Guid?>("BranchId");

                    b.Property<Guid>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Note");

                    b.Property<byte[]>("TimeStamp");

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitName");

                    b.Property<Guid>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("UnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictApplication", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClientId");

                    b.Property<string>("ClientSecret");

                    b.Property<string>("DisplayName");

                    b.Property<string>("LogoutRedirectUri");

                    b.Property<string>("RedirectUri");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique()
                        .HasFilter("[ClientId] IS NOT NULL");

                    b.ToTable("OpenIddictApplications");
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictAuthorization", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicationId");

                    b.Property<string>("Scope");

                    b.Property<string>("Status");

                    b.Property<string>("Subject");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("OpenIddictAuthorizations");
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictScope", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("OpenIddictScopes");
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictToken", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApplicationId");

                    b.Property<string>("AuthorizationId");

                    b.Property<string>("Ciphertext");

                    b.Property<DateTimeOffset?>("End");

                    b.Property<string>("Hash");

                    b.Property<DateTimeOffset?>("Start");

                    b.Property<string>("Status");

                    b.Property<string>("Subject");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("AuthorizationId");

                    b.HasIndex("Hash")
                        .IsUnique()
                        .HasFilter("[Hash] IS NOT NULL");

                    b.ToTable("OpenIddictTokens");
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Order", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationUser", "Cashier")
                        .WithMany("Orders")
                        .HasForeignKey("CashierId");

                    b.HasOne("ebrain.admin.bc.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.OrderDetail", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ebrain.admin.bc.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ebrain.admin.bc.Models.Product", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ebrain.admin.bc.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationRole")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationUser")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ebrain.admin.bc.Models.ApplicationUser")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ebrain.admin.bc.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictAuthorization", b =>
                {
                    b.HasOne("OpenIddict.Models.OpenIddictApplication", "Application")
                        .WithMany("Authorizations")
                        .HasForeignKey("ApplicationId");
                });

            modelBuilder.Entity("OpenIddict.Models.OpenIddictToken", b =>
                {
                    b.HasOne("OpenIddict.Models.OpenIddictApplication", "Application")
                        .WithMany("Tokens")
                        .HasForeignKey("ApplicationId");

                    b.HasOne("OpenIddict.Models.OpenIddictAuthorization", "Authorization")
                        .WithMany("Tokens")
                        .HasForeignKey("AuthorizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
